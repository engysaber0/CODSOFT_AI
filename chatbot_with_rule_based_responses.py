# -*- coding: utf-8 -*-
"""CHATBOT WITH RULE-BASED  RESPONSES.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gfbIg5d-RSglReXM-XtmMSD1NtgaFLXs
"""

def frontend_chatbot_response(user_input):
    user_input = user_input.lower()

    # Simple questions and greetings
    if 'hello' in user_input or 'hi' in user_input:
        return "Hello! How can I assist you with frontend development today?"
    elif 'how are you' in user_input:
        return "I'm a chatbot, so I don't have feelings, but I'm here to help you with frontend development!"
    elif 'your name' in user_input:
        return "I'm your friendly frontend development chatbot. How can I assist you today?"
    elif 'your age' in user_input:
        return "I'm a timeless entity created to assist with frontend development queries."
    elif 'thank you' in user_input or 'thanks' in user_input:
        return "You're welcome! If you have any more questions, feel free to ask."
    elif 'goodbye' in user_input or 'bye' in user_input:
        return "Goodbye! Happy coding!"

    # HTML
    elif 'html' in user_input:
        if 'tag' in user_input:
            return "HTML tags are the building blocks of HTML. Common tags include <p> for paragraphs, <a> for links, and <div> for divisions."
        elif 'attribute' in user_input:
            return "HTML attributes provide additional information about elements. Examples include 'id', 'class', and 'src' for images."
        elif 'element' in user_input:
            return "HTML elements are defined by a start tag, some content, and an end tag. For example, <p>This is a paragraph.</p>"
        elif 'doctype' in user_input:
            return "The <!DOCTYPE> declaration defines the document type and version of HTML. It's usually the first line in an HTML document."
        elif 'head' in user_input:
            return "The <head> element contains meta-information about the HTML document, such as the title, links to stylesheets, and meta tags."
        elif 'body' in user_input:
            return "The <body> element contains the content of the HTML document, such as text, images, links, and other media."
        elif 'list' in user_input:
            return "HTML lists can be ordered (with <ol>) or unordered (with <ul>). Each list item is defined with an <li> tag."
        elif 'table' in user_input:
            return "HTML tables are defined with the <table> tag. Rows are defined with <tr>, and cells are defined with <td> or <th> for headers."
        elif 'form' in user_input:
            return "HTML forms are used to collect user input. They are defined with the <form> tag and can contain input elements like text fields, checkboxes, and buttons."
        elif 'input' in user_input:
            return "The <input> element is used to create interactive controls in a web form. Types include text, password, submit, and more."
        elif 'image' in user_input:
            return "The <img> tag is used to embed images in an HTML page. It has attributes like 'src' for the image source and 'alt' for alternative text."
        elif 'link' in user_input:
            return "The <a> tag defines a hyperlink. The 'href' attribute specifies the URL of the page the link goes to."
        elif 'meta' in user_input:
            return "Meta tags provide metadata about the HTML document. They are placed inside the <head> tag and include information like author, description, and keywords."
        elif 'semantic' in user_input:
            return "Semantic HTML tags provide meaning to the content they contain. Examples include <article>, <section>, <nav>, <header>, and <footer>."
        elif 'iframe' in user_input:
            return "The <iframe> element is used to embed another HTML page within the current page. It has attributes like 'src' for the URL and 'width' and 'height' for dimensions."
        elif 'audio' in user_input:
            return "The <audio> element is used to embed sound content in a document, such as music or audio streams. It has attributes like 'src' and 'controls'."
        elif 'video' in user_input:
            return "The <video> element is used to embed video content in a document. It has attributes like 'src', 'controls', 'autoplay', and 'loop'."
        elif 'canvas' in user_input:
            return "The <canvas> element is used to draw graphics on a web page using JavaScript. It has attributes like 'width' and 'height'."
        elif 'svg' in user_input:
            return "SVG (Scalable Vector Graphics) is an XML-based format for vector graphics. The <svg> element is used to define SVG graphics in HTML."
        elif 'blockquote' in user_input:
            return "The <blockquote> element is used to define a section that is quoted from another source. It is typically displayed with indentation."
        elif 'pre' in user_input:
            return "The <pre> element defines preformatted text. Text inside this element is displayed in a fixed-width font and preserves both spaces and line breaks."

    # CSS
    elif 'css' in user_input:
        if 'selector' in user_input:
            return "CSS selectors are used to select the HTML elements you want to style. Common selectors include class (.), id (#), and element names."
        elif 'property' in user_input:
            return "CSS properties define the style of HTML elements. Examples include 'color', 'font-size', 'margin', and 'padding'."
        elif 'class' in user_input:
            return "In CSS, a class selector is used to select elements with a specific class attribute. It is defined with a dot (.) followed by the class name."
        elif 'id' in user_input:
            return "In CSS, an ID selector is used to select an element with a specific id attribute. It is defined with a hash (#) followed by the ID name."
        elif 'box model' in user_input:
            return "The CSS box model describes the rectangular boxes generated for elements in the document tree. It consists of margins, borders, padding, and theid  actual content."
        elif 'flexbox' in user_input:
            return "Flexbox is a CSS layout module that provides an easier way to design flexible and responsive layout structures without using float or positioning."
        elif 'grid' in user_input:
            return "CSS Grid Layout is a two-dimensional layout system for the web. It allows you to layout items in rows and columns with great control."
        elif 'media query' in user_input:
            return "Media queries are used in CSS to apply styles based on the conditions of the viewport, such as its width, height, or orientation."
        elif 'pseudo-class' in user_input:
            return "CSS pseudo-classes are used to define the special state of an element. Examples include :hover, :active, :nth-child, and :focus."
        elif 'pseudo-element' in user_input:
            return "CSS pseudo-elements are used to style specific parts of an element. Examples include ::before, ::after, ::first-letter, and ::first-line."
        elif 'animation' in user_input:
            return "CSS animations allow you to create animations by transitioning between different CSS styles. Key properties include 'animation-name', 'animation-duration', and 'animation-timing-function'."
        elif 'transition' in user_input:
            return "CSS transitions allow you to change property values smoothly (over a given duration). Key properties include 'transition-property', 'transition-duration', and 'transition-timing-function'."
        elif 'transform' in user_input:
            return "CSS transforms allow you to move, rotate, scale, and skew elements. Common functions include 'translate', 'rotate', 'scale', and 'skew'."
        elif 'responsive' in user_input:
            return "Responsive web design uses CSS to ensure web pages look good on all devices by using flexible layouts, images, and CSS media queries."
        elif 'positioning' in user_input:
            return "CSS positioning allows you to control the layout of your elements. Values include 'static', 'relative', 'absolute', 'fixed', and 'sticky'."
        elif 'z-index' in user_input:
            return "The z-index property specifies the stack order of elements. Elements with a higher z-index will be in front of those with a lower z-index."
        elif 'float' in user_input:
            return "The float property is used to position elements to the left or right of their container, allowing text and inline elements to wrap around them."
        elif 'clear' in user_input:
            return "The clear property is used to control the behavior of floating elements. It specifies whether an element can be next to floating elements or must be moved below them."
        elif 'overflow' in user_input:
            return "The overflow property controls what happens to content that is too large to fit into an element's box. Values include 'visible', 'hidden', 'scroll', and 'auto'."
        elif 'background' in user_input:
            return "The background property is used to set the background of an element. It includes properties like 'background-color', 'background-image', 'background-repeat', and 'background-size'."

    # JavaScript
    elif 'javascript' in user_input:
        if 'variable' in user_input:
            return "In JavaScript, variables are used to store data values. You can declare a variable using var, let, or const."
        elif 'function' in user_input:
            return "JavaScript functions are blocks of code designed to perform a particular task. They are executed when something invokes them."
        elif 'event' in user_input:
            return "JavaScript events are actions that occur in the browser, such as clicks, mouse movements, and key presses. You can use event listeners to respond to these events."
        elif 'array' in user_input:
            return "In JavaScript, an array is a special variable that can hold more than one value at a time. Arrays are created with square brackets []."
        elif 'object' in user_input:
            return "In JavaScript, objects are collections of key-value pairs. They are defined with curly braces {}."
        elif 'string' in user_input:
            return "In JavaScript, a string is a sequence of characters. Strings are created using single quotes '', double quotes \"\", or backticks ``."
        elif 'number' in user_input:
            return "In JavaScript, numbers are used to represent both integers and floating-point numbers. They are created without quotes."
        elif 'boolean' in user_input:
            return "In JavaScript, booleans represent one of two values: true or false."
        elif 'null' in user_input:
            return "In JavaScript, null is an assignment value that represents no value or no object."
        elif 'undefined' in user_input:
            return "In JavaScript, undefined means a variable has been declared but has not yet been assigned a value."
        elif 'operator' in user_input:
            return "JavaScript operators are used to assign and compare values, perform arithmetic operations, and more. Examples include +, -, *, /, and ==."
        elif 'loop' in user_input:
            return "JavaScript loops are used to perform repeated tasks based on a condition. Common loops include for, while, and do...while."
        elif 'if statement' in user_input:
            return "An if statement is used to perform actions based on a condition. If the condition is true, the block of code inside the if statement will be executed."
        elif 'switch statement' in user_input:
            return "A switch statement evaluates an expression and executes code blocks based on matching case statements. It's a useful way to handle multiple conditions."
        elif 'promise' in user_input:
            return "In JavaScript, a promise represents the eventual completion (or failure) of an asynchronous operation and its resulting value."
        elif 'async' in user_input:
            return "The async keyword is used to declare an asynchronous function, which returns a promise. It can be used with the await keyword to pause execution until the promise is resolved."
        elif 'await' in user_input:
            return "The await keyword is used inside an async function to pause its execution until a promise is resolved or rejected."
        elif 'callback' in user_input:
            return "A callback is a function passed as an argument to another function. It can be executed after the completion of some operation, allowing asynchronous code execution."
        elif 'dom' in user_input:
            return "The Document Object Model (DOM) is a programming interface for web documents. It represents the page so that programs can change the document structure, style, and content."
        elif 'event listener' in user_input:
            return "An event listener is a procedure in JavaScript that waits for an event to occur. It can be attached to elements to execute code when the event is triggered."
        elif 'json' in user_input:
            return "JSON (JavaScript Object Notation) is a lightweight data-interchange format that's easy for humans to read and write and easy for machines to parse and generate."
        elif 'ajax' in user_input:
            return "AJAX (Asynchronous JavaScript and XML) is a technique for creating fast and dynamic web pages by exchanging small amounts of data with the server behind the scenes."
        elif 'fetch' in user_input:
            return "The fetch API is a modern interface for making network requests in JavaScript. It returns promises and allows you to perform asynchronous operations."
        elif 'local storage' in user_input:
            return "Local storage allows you to store data in the browser that persists even after the browser is closed. It can be accessed using the localStorage object."
        elif 'session storage' in user_input:
            return "Session storage is similar to local storage, but it only lasts for the duration of the page session. It can be accessed using the sessionStorage object."
        elif 'template literals' in user_input:
            return "Template literals are string literals that allow embedded expressions. They are enclosed by backticks (``) and can contain placeholders indicated by the ${expression} syntax."
        elif 'arrow function' in user_input:
            return "Arrow functions provide a shorter syntax for writing function expressions in JavaScript. They are defined using the '=>' syntax."
        elif 'class' in user_input:
            return "In JavaScript, a class is a blueprint for creating objects with predefined properties and methods. It is defined using the 'class' keyword."

    else:
        return "I'm sorry, I don't understand that. Can you please rephrase or ask about HTML, CSS, JavaScript, or a frontend framework?"

# Main loop to interact with the chatbot
print("Welcome to the frontend chatbot!")
print("Type 'exit' to end the conversation.")

while True:
    user_input = input("You: ")
    if user_input.lower() == 'exit':
        print("Chatbot: Goodbye!")
        break

    response = frontend_chatbot_response(user_input)
    print(f"Chatbot: {response}")